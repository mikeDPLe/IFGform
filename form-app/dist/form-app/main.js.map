{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/classes/dimensions.ts","./src/app/classes/pdf-info.ts","./src/app/classes/signature-info.ts","./src/app/components/capture-image/capture-image.component.ts","./src/app/components/capture-image/capture-image.component.html","./src/app/components/check-door/check-door.component.ts","./src/app/components/check-door/check-door.component.html","./src/app/components/check-remove/check-remove.component.html","./src/app/components/check-remove/check-remove.component.ts","./src/app/components/complete/complete.component.ts","./src/app/components/complete/complete.component.html","./src/app/components/cust-refuse/cust-refuse.component.ts","./src/app/components/cust-refuse/cust-refuse.component.html","./src/app/components/customer-signature-pad/customer-signature-pad.component.ts","./src/app/components/customer-signature-pad/customer-signature-pad.component.html","./src/app/components/dim-fail-employee1/dim-fail-employee1.component.html","./src/app/components/dim-fail-employee1/dim-fail-employee1.component.ts","./src/app/components/dimension-form/dimension-form.component.html","./src/app/components/dimension-form/dimension-form.component.ts","./src/app/components/dimension-product/dimension-product.component.html","./src/app/components/dimension-product/dimension-product.component.ts","./src/app/components/employee-info/employee-info.component.ts","./src/app/components/employee-info/employee-info.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/manager-contact/manager-contact.component.ts","./src/app/components/manager-contact/manager-contact.component.html","./src/app/components/navbar-below/navbar-below.component.ts","./src/app/components/navbar-below/navbar-below.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/pdf-holder/pdf-holder.component.ts","./src/app/components/pdf-holder/pdf-holder.component.html","./src/app/components/problem-install/problem-install.component.html","./src/app/components/problem-install/problem-install.component.ts","./src/app/components/proceed/proceed.component.html","./src/app/components/proceed/proceed.component.ts","./src/app/components/safety/safety.component.html","./src/app/components/safety/safety.component.ts","./src/app/services/auth.service.ts","./src/app/services/dimension.service.ts","./src/app/services/employee-details.service.ts","./src/app/services/image-holder.service.ts","./src/app/services/make-pdf.service.ts","./src/app/services/signature-handler.service.ts","./src/app/services/step.service.ts","./src/app/services/valid-dim.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CaptureImageComponent } from './components/capture-image/capture-image.component';\r\nimport { CheckDoorComponent } from './components/check-door/check-door.component';\r\nimport { CheckRemoveComponent } from './components/check-remove/check-remove.component';\r\nimport { CompleteComponent } from './components/complete/complete.component';\r\nimport { CustRefuseComponent } from './components/cust-refuse/cust-refuse.component';\r\nimport { CustomerSignaturePadComponent } from './components/customer-signature-pad/customer-signature-pad.component';\r\nimport { DimFailEmployee1Component } from './components/dim-fail-employee1/dim-fail-employee1.component';\r\nimport { DimensionFormComponent } from './components/dimension-form/dimension-form.component';\r\nimport { DimensionProductComponent } from './components/dimension-product/dimension-product.component';\r\nimport { EmployeeInfoComponent } from './components/employee-info/employee-info.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { PdfHolderComponent } from './components/pdf-holder/pdf-holder.component';\r\nimport { ProceedComponent } from './components/proceed/proceed.component';\r\nimport { SafetyComponent } from './components/safety/safety.component';\r\n\r\nconst routes: Routes = [\r\n  {path: \"\", component: LoginComponent, },\r\n  {path: \"emp-info\", component:EmployeeInfoComponent},\r\n  {path:\"safety\", component:SafetyComponent, outlet:\"primary\"},\r\n  {path:\"dimension-form\", component:DimensionFormComponent},\r\n  {path:\"check-door\", component:CheckDoorComponent},\r\n  {path:\"dimension-product\", component:DimensionProductComponent},\r\n  {path:\"dim-fail\", component:DimFailEmployee1Component},\r\n  {path:\"customer-sign\", component:CustomerSignaturePadComponent},\r\n  {path:\"cust-refuse\", component:CustRefuseComponent},\r\n  {path:\"check-remove\" ,component:CheckRemoveComponent},\r\n  {path:\"proceed\", component: ProceedComponent},\r\n  {path:\"complete\", component:CompleteComponent},\r\n  {path:\"pdf\", component:PdfHolderComponent},\r\n  {path:\"image\", component:CaptureImageComponent},\r\n  {path: '**', redirectTo:\"\"}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'form-app';\n}\n","<navbar></navbar>\r\n<script src=\"https://unpkg.com/downloadjs@1.4.7\"></script>\r\n<div class=\"container\" style=\"padding:20px;background-color: #fafafa;\" >\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<navbar-below></navbar-below>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { DatePipe } from '@angular/common';\r\nimport { PdfJsViewerModule } from 'ng2-pdfjs-viewer';\r\n\r\nimport { MatDatepickerModule} from '@angular/material/datepicker'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatNativeDateModule,  } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule} from '@angular/material/button'; \r\nimport { MatDividerModule} from '@angular/material/divider'; \r\n  \r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SafetyComponent } from './components/safety/safety.component';\r\nimport { DimensionFormComponent } from './components/dimension-form/dimension-form.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { CheckDoorComponent } from './components/check-door/check-door.component';\r\nimport { DimensionProductComponent } from './components/dimension-product/dimension-product.component';\r\nimport { DimFailEmployee1Component } from './components/dim-fail-employee1/dim-fail-employee1.component';\r\nimport { CustomerSignaturePadComponent } from './components/customer-signature-pad/customer-signature-pad.component';\r\nimport { ProblemInstallComponent } from './components/problem-install/problem-install.component';\r\nimport { CustRefuseComponent } from './components/cust-refuse/cust-refuse.component';\r\nimport { CheckRemoveComponent } from './components/check-remove/check-remove.component';\r\nimport { ProceedComponent } from './components/proceed/proceed.component';\r\nimport { CompleteComponent } from './components/complete/complete.component';\r\nimport { PdfHolderComponent } from './components/pdf-holder/pdf-holder.component';\r\nimport { EmployeeInfoComponent } from './components/employee-info/employee-info.component';\r\nimport { ManagerContactComponent } from './components/manager-contact/manager-contact.component';\r\nimport { CaptureImageComponent } from './components/capture-image/capture-image.component';\r\nimport { NavbarBelowComponent } from './components/navbar-below/navbar-below.component';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SafetyComponent,\r\n    DimensionFormComponent,\r\n    NavbarComponent,\r\n    CheckDoorComponent,\r\n    DimensionProductComponent,\r\n    DimFailEmployee1Component,\r\n    CustomerSignaturePadComponent,\r\n    ProblemInstallComponent,\r\n    CustRefuseComponent,\r\n    CheckRemoveComponent,\r\n    ProceedComponent,\r\n    CompleteComponent,\r\n    PdfHolderComponent,\r\n    EmployeeInfoComponent,\r\n    ManagerContactComponent,\r\n    CaptureImageComponent,\r\n    NavbarBelowComponent,\r\n \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NoopAnimationsModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    PdfJsViewerModule,\r\n    \r\n    \r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Dimensions {\n    width!:number \n    height!:number\n    widthUnit!: string\n    heightUnit!: string\n\n\n    constructor(public stringWidth: string, public stringHeight: string) {\n        this.width = parseFloat(stringWidth);\n        this.widthUnit = stringWidth.replace(/([0-9\\.\\s])/g,'');\n        this.height = parseFloat(stringHeight);\n        this.heightUnit = stringHeight.replace(/([0-9\\.\\s])/g,'')\n    }\n\n\n  \n}\n\n\n\n","export class PdfInfo {\r\n    Date :string =\"\"\r\n    CrewName:string =\"\"\r\n    OrderNumber:string =\"\"\r\n    IFGSaleRepName: string =\"\"\r\n    IFGSaleRepContactNumber: string =\"\"\r\n\r\n    DoorHeight:string =\"\"\r\n    DoorWidth :string =\"\"\r\n    ProductHeight:string =\"\"\r\n    ProductWidth:string =\"\"\r\n    \r\n    EmployeeSign1:string =\"\"\r\n    EmployeePrint1:string =\"\"\r\n    \r\n\r\n    CustomerSign1:string =\"\"\r\n    CustomerPrint1:string =\"\"\r\n\r\n    OldDoorHeight:string =\"\"\r\n    OldDoorWidth :string =\"\"\r\n    OldProductHeight:string =\"\"\r\n    OldProductWidth:string =\"\"\r\n\r\n    EmployeeSign2:string =\"\"\r\n    EmployeePrint2:string =\"\"\r\n\r\n    CustomerSign2:string =\"\"\r\n    CustomerPrint2:string =\"\"    \r\n\r\n    CustomerSign3:string =\"\"\r\n    CustomerPrint3:string =\"\"\r\n\r\n    CustomerSign4:string =\"\"\r\n    CustomerPrint4:string =\"\"\r\n\r\n    CustomerSign5:string =\"\"\r\n    CustomerPrint5:string =\"\"\r\n\r\n    //optional fields on refuse\r\n    ManagerInstructions?:string;\r\n    ManagerName?:string;\r\n    ManagerNumber?:string;\r\n    ManagerProceed?:boolean\r\n\r\n    InstallImages?:string[];\r\n    RemoveImages?:string[];\r\n}\r\n","\r\nexport class SignatureInfo {\r\n\r\n    signatureImg!: string;\r\n    date!: Date\r\n    name!: string;\r\n    isCustomer!: boolean;\r\n    isEmployee!: boolean;\r\n    step!: string;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PDFOptionList, values } from 'pdf-lib';\r\nimport { ImageHolderService } from '../../services/image-holder.service';\r\nimport { StepService } from '../../services/step.service';\r\nimport { ValidDimService } from '../../services/valid-dim.service';\r\n\r\n@Component({\r\n  selector: 'app-capture-image',\r\n  templateUrl: './capture-image.component.html',\r\n  styleUrls: ['./capture-image.component.css']\r\n})\r\nexport class CaptureImageComponent implements OnInit {\r\n\r\n  constructor(private fb:FormBuilder, \r\n    private router:Router,\r\n    private valid:ValidDimService,\r\n    private step:StepService,\r\n    private image:ImageHolderService) { \r\n      this.needsInstallImages = image.needsInstallImages\r\n      this.needsRemoveImages = image.needsRemoveImages\r\n    }\r\n\r\n\r\n formGroup = this.fb.group({\r\n imageArray: this.fb.array([], [Validators.required])\r\n })\r\n\r\n\r\n needsInstallImages:boolean \r\n needsRemoveImages:boolean \r\n uriHolder:Array<string> = [] \r\n \r\n get imageArray(){\r\n   return this.formGroup.get('imageArray') as FormArray;\r\n }\r\n\r\n  showPreview(event: Event, index:number) {\r\n    var file = (event.target as HTMLInputElement).files?.item(0)\r\n    var control =   event.target as HTMLInputElement\r\n    control.style.visibility = 'hidden'\r\n    if (file) {\r\n      // File Preview\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.uriHolder[index] = reader.result as string\r\n      }\r\n       reader.readAsDataURL(file)\r\n      \r\n    }\r\n  }\r\n\r\n  addImage(){\r\n    this.imageArray.push(this.fb.control(['']))\r\n  }\r\n\r\n  removeImage(index:number){\r\n    this.imageArray.removeAt(index)\r\n  }\r\n  \r\n\r\n  ngOnInit(): void {\r\n   }\r\n\r\n\r\n  submit(){\r\n    if(this.needsInstallImages && this.needsRemoveImages)\r\n    { \r\n      this.image.finishInstall()\r\n      this.image.saveInstall(this.uriHolder)\r\n      this.step.reloadComponent('image')\r\n      return\r\n    }\r\n    if(this.needsRemoveImages) {\r\n      this.image.finishRemove()\r\n      this.image.saveRemove(this.uriHolder)\r\n    }\r\n    if(this.needsInstallImages) {\r\n      this.image.finishInstall()\r\n      this.image.saveInstall(this.uriHolder)\r\n    }\r\n     if(this.valid.installEverFalse) \r\n     this.router.navigate(['complete'])\r\n     else \r\n     this.router.navigate(['customer-sign'])\r\n  }\r\n    \r\n}\r\n","<div>\r\n    <p>Please take images of\r\n  \r\n        <span *ngIf=\"needsInstallImages ||  (needsInstallImages && needsRemoveImages)\">\r\n            the installation site.\r\n        </span> \r\n        <span *ngIf=\"needsRemoveImages && !needsInstallImages\">\r\n            the removal site.\r\n        </span>\r\n    </p>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<form [formGroup]='formGroup' (ngSubmit)='submit()'>\r\n<div class='form-group' formArrayName='imageArray'>\r\n    <div *ngFor= 'let control of imageArray.controls; let i= index'>\r\n        <br>\r\n        <input type=\"file\" accept=\"image/*\" capture=\"environment\" id='i' [formControlName]= 'i' (change)='showPreview($event, i)'>\r\n        <div  class= \"imagePreview\" *ngIf=\"uriHolder[i]\">\r\n            <img style=\"width:400px; height: 400px;\" [src]=\"uriHolder[i]\">\r\n         </div>\r\n         <label style='border:1px black' *ngIf=\"uriHolder[i]\" for=\"i\" >\r\n            Retake Image\r\n         </label>   \r\n         <button mat-stroked-button color='warn' type='button' *ngIf=\"imageArray.length > 1 && uriHolder[i] \" (click)='removeImage(i)'> Remove image </button>\r\n    </div>  \r\n    <br>\r\n  <button mat-stroked-button color=\"primary\" type='button' (click)='addImage()'> Add additional image</button>\r\n</div>\r\n\r\n<button mat-flat-button color=\"primary\" type=\"submit\"> Submit</button>\r\n</form>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-check-door',\r\n  templateUrl: './check-door.component.html',\r\n  styleUrls: ['./check-door.component.css']\r\n})\r\nexport class CheckDoorComponent implements OnInit {\r\n\r\n  constructor(private route: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  next(){\r\n      this.route.navigate(['dimension-product'])\r\n     }\r\n  }\r\n\r\n","<div class=\"form-group\" style='margin:auto'>\r\n    <p>\r\n        Is there another doorway?\r\n    </p>\r\n    <div style=\"padding:5px\" >\r\n    <button mat-stroked-button color=\"primary\" [routerLink]=\"['dimension-form']\"> Yes</button> \r\n    </div>\r\n    <div style=\"padding:5px\">\r\n    <button mat-stroked-button color=\"warn\"  (click)=\"next()\" > No </button>\r\n    </div>\r\n\r\n</div>","<div *ngIf=\"showConfirm == false\">\r\n    \r\n    <p>\r\n       Is there any old equipment to remove?\r\n    </p>\r\n</div>\r\n \r\n<div *ngIf=\"showConfirm == true;\">\r\n    <p>\r\n      Is the uninstall travel path the same as the one for product installation?\r\n     </p>\r\n\r\n</div>\r\n<button mat-flat-button color='primary' (click)=\"yes()\" > Yes </button>\r\n<button mat-flat-button color='warn' (click)=\"no()\" > No </button>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DimensionService } from '../../services/dimension.service';\r\nimport { ValidDimService } from '../../services/valid-dim.service';\r\n\r\n@Component({\r\n  selector: 'app-check-remove',\r\n  templateUrl: './check-remove.component.html',\r\n  styleUrls: ['./check-remove.component.css']\r\n})\r\nexport class CheckRemoveComponent {\r\n\r\n  constructor(\r\n    private dim: DimensionService,\r\n    private router: Router,\r\n    private valid: ValidDimService,\r\n  ) { }\r\n  showConfirm: Boolean = false;\r\n\r\n  yes() {\r\n    if (this.showConfirm) {\r\n      this.dim.useOldTravel();\r\n      this.router.navigate(['dimension-product'])\r\n    }\r\n    this.showConfirm = true;\r\n  }\r\n\r\n  no() {\r\n    if (!this.showConfirm) {\r\n      this.valid.testObs2.next(true);\r\n      this.router.navigate(['proceed'])\r\n    } else {\r\n      this.valid.neededRemoval = true;\r\n      this.router.navigate(['dimension-form'])\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MakePDFService } from '../../services/make-pdf.service';\r\n\r\n@Component({\r\n  selector: 'app-complete',\r\n  templateUrl: './complete.component.html',\r\n  styleUrls: ['./complete.component.css']\r\n})\r\nexport class CompleteComponent implements OnInit {\r\n\r\n  constructor(private pdf:MakePDFService) {\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class='subheader'>\r\n    Installation/Uninstallation Complete.\r\n    Proceed to completed pdf.\r\n</div>\r\n<br>\r\n<button mat-flat-button color=\"primary\" [routerLink]=\"['/pdf']\"> Proceed </button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cust-refuse',\n  templateUrl: './cust-refuse.component.html',\n  styleUrls: ['./cust-refuse.component.css']\n})\nexport class CustRefuseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\r\n<h3> Stop!</h3>\r\n<mat-divider></mat-divider>\r\n <ol class='subheader'>\r\n     <li>\r\n         Do not install or remove any equipment.\r\n     </li>\r\n     <li>\r\n         Contact your salesperson/manager\r\n     </li>\r\n </ol>\r\n <mat-divider></mat-divider>\r\n <manager-contact></manager-contact>\r\n\r\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport {NgForm } from '@angular/forms';\r\nimport SignaturePad from 'signature_pad';\r\nimport { EmployeeDetailsService } from '../../services/employee-details.service';\r\nimport { SignatureHandlerService } from '../../services/signature-handler.service';\r\nimport { StepService } from '../../services/step.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-customer-signature-pad',\r\n  templateUrl: './customer-signature-pad.component.html',\r\n  styleUrls: ['./customer-signature-pad.component.css']\r\n})\r\nexport class CustomerSignaturePadComponent implements OnInit {\r\n\r\n  constructor(\r\n    private signatureService: SignatureHandlerService,\r\n    private step: StepService,\r\n    public empDetails: EmployeeDetailsService\r\n  ) {}\r\n\r\n  @ViewChild('signaturepad') canvasPad!: ElementRef<HTMLCanvasElement>\r\n  show: boolean = true\r\n  inputName!: string \r\n  signaturePad!: SignaturePad;\r\n  signatureEmpty:boolean = true;\r\n  signatureTouched:boolean = false;\r\n  picker1 = new Date\r\n \r\n\r\n  ngOnInit(): void {\r\n    this.signatureService.checkDiff()\r\n    this.show = this.signatureService.isCust\r\n  }\r\n  ngAfterViewInit(){\r\n   this.signaturePad = new SignaturePad(this.canvasPad.nativeElement)   \r\n  }\r\n  clear(){\r\n    this.signaturePad.clear()\r\n  }\r\n  change(){\r\n   this.signatureEmpty =  this.signaturePad.isEmpty()\r\n   this.signatureTouched = true;\r\n  }\r\n  onSubmit(f:NgForm) {\r\n   var date = this.picker1\r\n   var uri =  this.signaturePad.toDataURL()\r\n   var name = this.inputName\r\n   var y = this.signatureService.createSigInfo(uri,name,date)\r\n   this.signatureService.pushtoArray(y);\r\n   this.signatureService.checkRepeat()\r\n  }\r\n  onRefuse(){\r\n    this.step.setStepRefuse()\r\n  }\r\n\r\n}\r\n\r\n","\r\n<h2>Signature Form</h2>\r\n<mat-divider> </mat-divider>\r\n<br>\r\n<form #signForm=\"ngForm\" (ngSubmit)=\"onSubmit(signForm)\" >\r\n<div id= signatureDiv class=\"form-group\">\r\n   \r\n <mat-form-field appearance=\"fill\">\r\n  <mat-label>Choose a date</mat-label>\r\n  <input name='picker' matInput [matDatepicker]=\"picker\" [(ngModel)] = 'picker1'>\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n </mat-form-field> \r\n  \r\n    <problem-install>\r\n    </problem-install>\r\n    <mat-form-field appearance=\"fill\">\r\n       <mat-label for=\"customer_name\">\r\n         Type \r\n         <ng-container *ngIf=\"show == true then success; else elseBlock\"></ng-container> \r\n         <ng-template #success >customer</ng-template>\r\n         <ng-template #elseBlock> witnessing employee </ng-template> name:\r\n      </mat-label>\r\n         <input matInput type=\"text\" name=\"name\" #name = 'ngModel'  [(ngModel)]=\"inputName\" class=\"form-control\" id=\"name\" style=\"width:inherit\" autocomplete=\"off\" required > \r\n         <mat-error *ngIf=\"name.invalid\">Please type a name.</mat-error>\r\n\r\n    </mat-form-field>\r\n    <br>\r\n    \r\n    <p>Please sign \r\n      <ng-container *ngIf=\"show == true then success; else elseBlock\"></ng-container> \r\n      <ng-template #success >customer's</ng-template>\r\n      <ng-template #elseBlock> witnessing employee's </ng-template>\r\n      name below </p>\r\n    <mat-error *ngIf=\"signatureEmpty && signatureTouched\" id=\"errorMsg\">\r\n      Please provide a signature.\r\n    </mat-error>\r\n      <div id=\"wrapper\">\r\n       <canvas #signaturepad  width=400 height=\"200\" style=\"border:1px black solid\" (mouseleave)=\"change()\" >\r\n\r\n       </canvas> \r\n   </div>\r\n   <br>\r\n   <button mat-button (click)=\"clear()\">Clear Signature</button>\r\n   <button mat-flat-button color='primary' type=\"submit\" id=\"done\" [disabled]=\"!signForm.form.valid || signatureEmpty\"> Done </button>\r\n   <div style='margin-top: 20px;' *ngIf=\"show == true\" >\r\n   <button mat-flat-button color='warn'  (click) =\"onRefuse()\" >\r\n      Customer refuses to sign\r\n   </button>\r\n  </div>\r\n  </div>\r\n</form>\r\n\r\n","  <div *ngIf=\"showConfirm == false && isInstall == true\" class=\"form-group\">\r\n        <ol>\r\n            <li>\r\n               <p>STOP! Inform customer that new product cannot be safely transported and installed in the final location.</p>\r\n               <p>The product width or height is larger than the dimensions of the travel path.</p>\r\n            </li>\r\n            <li>\r\n               If customer wishes to continue installation, explain that IFG will not be held responsible for any damages to the product or \r\n               products within the travel path including:\r\n            </li>  \r\n               <ul>\r\n                   <li>\r\n                       Scratches\r\n                   </li>\r\n                   <li>\r\n                       Gouges\r\n                   </li>\r\n                   <li>\r\n                       Dents\r\n                   </li>\r\n                   <li>\r\n                       Loss of manufacturer warranty\r\n                   </li>\r\n                   <li>\r\n                       Decrease or loss of product functionality\r\n                   </li>\r\n                </ul> \r\n        </ol>\r\n        <button mat-flat-button color=\"primary\" (click)=\"next()\"> Next</button> \r\n    </div>\r\n    <div *ngIf=\"showConfirm == false && isRemove == true\" class=\"form-group\">\r\n    <ol>\r\n        <li>\r\n           <p>STOP! Inform customer that the old equipment cannot be removed safely.</p>\r\n           <p>The product width or height is larger than the dimensions of the travel path.</p>\r\n        </li>\r\n        <li>\r\n           If customer wishes to continue removal, explain that IFG will not be held responsible for any damages to the product or \r\n           products within the travel path including:\r\n        </li>  \r\n           <ul>\r\n               <li>\r\n                   Scratches\r\n               </li>\r\n               <li>\r\n                   Gouges\r\n               </li>\r\n               <li>\r\n                   Dents\r\n               </li>\r\n               <li>\r\n                   Loss of manufacturer warranty\r\n               </li>\r\n               <li>\r\n                   Decrease or loss of product functionality\r\n               </li>\r\n            </ul> \r\n    </ol>\r\n    <button mat-flat-button color=\"primary\" (click)=\"next()\"> Next</button> \r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"showConfirm == true\" class=\"form-group\">\r\n        <p>\r\n            Did you inform the customer of the possible complications?\r\n        </p>\r\n     <div style=\"padding:5px\">\r\n        <button  mat-flat-button color=\"primary\" (click)=\"next()\"  class=\"btn btn-primary\"> Yes</button>\r\n    </div>\r\n    <div style=\"padding:5px\">\r\n     <button  mat-flat-button color=\"warn\" (click)=\"back()\" style=\"padding:5px\" class=\"btn btn-danger\">  No </button>\r\n    </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ValidDimService } from '../../services/valid-dim.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dim-fail-employee1',\r\n  templateUrl: './dim-fail-employee1.component.html',\r\n  styleUrls: ['./dim-fail-employee1.component.css']\r\n})\r\nexport class DimFailEmployee1Component implements OnInit {\r\n\r\n  constructor(private router: Router,\r\n   private valid:ValidDimService) {\r\n    this.valid.removeObs.subscribe(needsRemovesigs =>{\r\n        this.isRemove = needsRemovesigs\r\n      })\r\n     this.valid.installObs.subscribe(needsInstallSigs => {\r\n       this.isInstall = needsInstallSigs\r\n     })\r\n     }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  showConfirm: Boolean = false;\r\n  isInstall:boolean = false;\r\n  isRemove: boolean = false;\r\n\r\n  next(){\r\n    if(this.showConfirm){\r\n      this.router.navigate(['customer-sign'])\r\n    } else \r\n    this.showConfirm = true;\r\n  }\r\n  back(){\r\n    this.showConfirm = false;\r\n  }\r\n\r\n}\r\n\r\n\r\n","    <div *ngIf=\"!checkDoor\" >\r\n        <h3>\r\n            Assess the travel path\r\n        </h3>\r\n    <mat-divider></mat-divider>\r\n  <form #f= \"ngForm\" id=\"specForm\" action=\"#\" class='subheader'>      \r\n\r\n        <h3 >  Determine the height and width of the\r\n            <span class='units'>doorway</span>  \r\n            in \r\n            <span class='units'> inches </span>\r\n        </h3>\r\n           <div class=\"form-group\">\r\n           <mat-form-field appearance=\"fill\">\r\n               <mat-label for=\"travel_height\">Doorway Height:</mat-label>\r\n               <input name=\"travel_height\" [(ngModel)] = \"travelDim.height\" \r\n               matInput\r\n               pattern ='^[+-]?((\\d+(\\.\\d*)?)|(\\.\\d+))$'\r\n               required \r\n               #travel_height = 'ngModel'\r\n               type=\"text\" \r\n               class=\"form-control\" \r\n                autocomplete=\"off\">\r\n                <mat-error *ngIf='travel_height.errors?.pattern'>\r\n                    Doorway height is not a number\r\n                </mat-error>\r\n                <mat-error *ngIf='travel_height.errors?.required'>\r\n                    Doorway height is required.\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field appearance=\"fill\">\r\n               <mat-label for=\"travel_width\">Doorway Width:</mat-label>\r\n               <input name=\"travel_width\"\r\n               matInput\r\n                [(ngModel)] = \"travelDim.width\" \r\n                pattern = '^[+-]?((\\d+(\\.\\d*)?)|(\\.\\d+))$'\r\n                required \r\n                #travel_width = 'ngModel'\r\n                type=\"text\"\r\n                 class=\"form-control\"  \r\n                 autocomplete=\"off\">\r\n                 <mat-error *ngIf='travel_width.errors?.pattern'>\r\n                    Doorway width is not a number.\r\n                 </mat-error>\r\n                 <mat-error *ngIf='travel_width.errors?.required'>\r\n                    Doorway width is required.\r\n                 </mat-error>\r\n            </mat-form-field>\r\n            </div>   \r\n        \r\n    <button [disabled]='!(f.valid)' mat-flat-button color=\"primary\" (click)=\"check()\" >Next</button> \r\n</form> \r\n</div>\r\n\r\n\r\n<div *ngIf=\"checkDoor\" class=\"form-group\">\r\n    <p>\r\n        Is there another doorway?\r\n    </p>\r\n    <div style=\"padding:5px\" >\r\n    <button  mat-flat-button color=\"primary\" (click)='yes()' > Yes</button> \r\n    </div>\r\n    <div style=\"padding:5px\">\r\n    <button  mat-flat-button color=\"warn\" (click)='no()'> No </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DimensionService } from '../../services/dimension.service';\r\nimport { Dimensions } from '../../classes/dimensions';\r\nimport { ValidDimService } from '../../services/valid-dim.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dimension-form',\r\n  templateUrl: './dimension-form.component.html',\r\n  styleUrls: ['./dimension-form.component.css']\r\n})\r\nexport class DimensionFormComponent implements OnInit {\r\n\r\n\r\n  travelDimArray: Array<Dimensions>  = []\r\n  \r\n  travelDim = {\r\n    width: \"\",\r\n    height: \"\",\r\n  }\r\n  isInstall:boolean = false;\r\n  checkDoor:boolean = false;\r\n \r\n  \r\n    \r\n  constructor(private DimService:DimensionService, \r\n    private router: Router,\r\n    private valid :ValidDimService) {\r\n      this.valid.testObs.subscribe(passedInstall => this.isInstall = !passedInstall)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  check() {\r\n    this.DimService.pushDimensionArray(this.travelDimArray, this.travelDim.width, this.travelDim.height)\r\n    this.checkDoor = true;\r\n    \r\n  }\r\n  yes(){\r\n    this.checkDoor = false;\r\n    this.travelDim.height = \"\"\r\n    this.travelDim.width = \"\"\r\n  }\r\n  no(){\r\n     if (!this.isInstall) {\r\n       this.DimService.travelRemoveDimArray = this.travelDimArray\r\n    } else {\r\n      this.DimService.travelDimArray = this.travelDimArray \r\n    }\r\n    this.router.navigate([\"dimension-product\"])\r\n  }\r\n  \r\n\r\n \r\n}\r\n","<div class='form-group'>\r\n    \r\n  <div *ngIf=\"isInstall; else elseBlock\"> <h3>Determine width and height of <span class='units'>equipment </span>to install in <span class='units'> inches</span> </h3> </div>\r\n        <ng-template #elseBlock> <h3>Determine width and height of <span class='units'>equipment </span>to remove in \r\n            <span class='units'> inches</span>  </h3></ng-template>\r\n\r\n\r\n<mat-divider></mat-divider>\r\n<form  #f=\"ngForm\" class=\"nonInit\" id=\"specForm\" action=\"#\">\r\n    <div class='form-group subheader' >\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label for=\"product_height\">Equipment Height:</mat-label>\r\n            <input matInput name=\"product_height\" \r\n            [(ngModel)]=\"productDim.height\" \r\n            pattern='^[+-]?((\\d+(\\.\\d*)?)|(\\.\\d+))$' \r\n            required\r\n                #product_height='ngModel' type=\"text\" class=\"form-control\" autocomplete=\"off\">\r\n            <mat-error *ngIf='product_height.errors?.pattern'>\r\n                Product height is not a number.\r\n            </mat-error>\r\n            <mat-error *ngIf=\"product_height.errors?.required\">\r\n                Product height is required.\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label for=\"product_width\">Equipment Width:</mat-label>\r\n            <input matInput name=\"product_width\" \r\n            [(ngModel)]=\"productDim.width\"\r\n             pattern='^[+-]?((\\d+(\\.\\d*)?)|(\\.\\d+))$' \r\n             required\r\n                #product_width='ngModel' type=\"text\" class=\"form-control\" autocomplete=\"off\">\r\n            <mat-error *ngIf='product_width.errors?.pattern'>\r\n                Product width is not a number.\r\n            </mat-error>\r\n            <mat-error *ngIf='product_width.errors?.required'>\r\n                Product width is required.\r\n            </mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n    <button [disabled]='!(f.valid)' mat-flat-button color=\"primary\" (click)=\"check()\">Next</button>\r\n\r\n</form>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DimensionService } from '../../services/dimension.service';\r\nimport { Dimensions } from '../../classes/dimensions';\r\nimport { ValidDimService } from '../../services/valid-dim.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dimension-product',\r\n  templateUrl: './dimension-product.component.html',\r\n  styleUrls: ['./dimension-product.component.css']\r\n})\r\nexport class DimensionProductComponent {\r\n\r\n  constructor(private dimService: DimensionService,\r\n    private router: Router,\r\n    private checkService: ValidDimService\r\n  ) {\r\n    checkService.testObs.subscribe(passedInstall => {\r\n      this.isInstall = !passedInstall\r\n    })\r\n\r\n  }\r\n\r\n  productDimArray:Array<Dimensions> = []\r\n  productDim = {\r\n    width:\"\",\r\n    height:\"\"\r\n  }\r\n  isInstall!:boolean;\r\n \r\n  check() {\r\n    if (this.isInstall) {\r\n      this.dimService.pushDimensionArray(this.productDimArray, this.productDim.width, this.productDim.height)\r\n      this.dimService.productDimArray = this.productDimArray\r\n      var result = this.checkService.checkValues(false)\r\n      if (result) {\r\n        this.router.navigate([\"check-remove\"])\r\n      } else[\r\n        this.router.navigate([\"dim-fail\"])\r\n      ]\r\n\r\n    } else {\r\n      this.check2()\r\n    }\r\n  }\r\n  check2(){\r\n    this.dimService.pushDimensionArray(this.productDimArray, this.productDim.width, this.productDim.height)\r\n    this.dimService.productRemoveDimArray = this.productDimArray\r\n    var result = this.checkService.checkValues(true)\r\n    if(result){\r\n      this.router.navigate([\"customer-sign\"])\r\n    } else [\r\n      this.router.navigate([\"dim-fail\"])\r\n    ]\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeDetailsService } from '../../services/employee-details.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee-info',\r\n  templateUrl: './employee-info.component.html',\r\n  styleUrls: ['./employee-info.component.css']\r\n})\r\nexport class EmployeeInfoComponent  {\r\n\r\n  constructor(private empDetails:EmployeeDetailsService,\r\n    private fb:FormBuilder,\r\n    private route:Router) { \r\n      this.empForm = this.fb.group({\r\n        inputDate: [{value:new Date(), disabled:true}, [Validators.required]],\r\n        orderNumber: ['', [Validators.required]], \r\n        salesRep:[(''), [Validators.required]],\r\n        salesRepContactNumber:['',  [\r\n          Validators.required,\r\n          Validators.pattern('^(\\\\+\\\\d{1,2}\\\\s)?\\\\(?\\\\d{3}\\\\)?[\\\\s.-]?\\\\d{3}[\\\\s.-]?\\\\d{4}$')\r\n         ]],\r\n        installCrew: this.fb.array([\r\n          this.fb.control('', [Validators.required]) \r\n        ]),\r\n      })\r\n  }\r\n  \r\n    empForm:FormGroup \r\n  \r\n\r\n\r\n  get orderNumber(){\r\n    return this.empForm.get('orderNumber')\r\n  }\r\n  get salesRep(){\r\n    return this.empForm.get('salesRep')\r\n  }\r\n  get salesRepContactNumber(){\r\n    return this.empForm.get('salesRepContactNumber')\r\n  }\r\n  get installCrew(){\r\n    return this.empForm.get('installCrew') as FormArray;\r\n  }\r\n\r\n  get inputDate(){\r\n    return this.empForm.get('inputDate')\r\n  }\r\n\r\n  addCrew(){\r\n    \r\n    this.installCrew.push(this.fb.control(''))\r\n  }\r\n\r\n  removeLastCrew(){\r\n     const index = this.installCrew.length - 1\r\n     this.installCrew.removeAt(index);\r\n  }\r\n\r\n  removeCrew(index: number){\r\n     this.installCrew.removeAt(index);\r\n  }\r\n\r\n  next(formdata:FormGroup){\r\n    this.empDetails.submitData(formdata);\r\n    this.route.navigate(['safety'])\r\n  }\r\n\r\n\r\n  getErrorDate(){\r\n    if(this.inputDate?.hasError('required')) {\r\n      return 'Please select a date'\r\n    }\r\n    return \r\n  }\r\n  getErrorOrder(){\r\n    if(this.orderNumber?.hasError('required'))\r\n    return 'Please type in an order number'\r\n    return\r\n  }\r\n  getErrorSalesRep(){\r\n    if(this.salesRep?.hasError('required'))\r\n    return 'Please enter sales represenative name'\r\n    return\r\n  }\r\n  getErrorSalesRepNumber(){\r\n    if(this.salesRepContactNumber?.hasError('required')) {\r\n      return 'Please enter sales rep contact number'\r\n    }\r\n  \r\n    return this.salesRepContactNumber?.hasError('pattern') ? 'Not a valid phone number' :'';\r\n  }\r\n\r\n}\r\n  ","\r\n<h3 style='text-align:center;'> Please enter pre-installation information</h3>\r\n<mat-divider></mat-divider>\r\n<form class='subheader' [formGroup] =\"empForm\" (ngSubmit)=\"next(empForm.value)\" >\r\n    <div>\r\n        <mat-form-field appearance=\"standard\">\r\n            <mat-label>Date:</mat-label>\r\n            <input formControlName='inputDate' [matDatepicker]=\"picker\" matInput>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"inputDate?.invalid\">{{getErrorDate()}}</mat-error>\r\n        </mat-form-field>\r\n    </div>\r\n<div class='form-group'>\r\n    <mat-form-field appearance=\"standard\">\r\n        <mat-label for=\"orderNumber \"> \r\n            Order Number: \r\n        </mat-label>\r\n        <input type='text' name='orderNumber' formControlName ='orderNumber' matInput >\r\n        <mat-error *ngIf=\"orderNumber?.invalid\">{{getErrorOrder()}}</mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class='form-group'>\r\n    <mat-form-field appearance=\"standard\">\r\n        <mat-label for=\"salesRep\">\r\n            Sales Representative Name:\r\n        </mat-label>\r\n        <input type='text' name=\"salesRep\" formControlName ='salesRep' matInput>\r\n        <mat-error *ngIf=\"salesRep?.invalid\">{{getErrorSalesRep()}}</mat-error>\r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class='form-group'>    \r\n    <mat-form-field appearance=\"standard\">\r\n        <mat-label>\r\n            Sales Representative Contact Number: \r\n        </mat-label>\r\n        <input type='text' name='salesRepContactNumber' formControlName = 'salesRepContactNumber' matInput>\r\n        <mat-error *ngIf=\"salesRepContactNumber?.invalid\"> {{getErrorSalesRepNumber()}}</mat-error>\r\n    </mat-form-field>\r\n</div> \r\n\r\n<mat-divider></mat-divider>\r\n    <div class='form-group' formArrayName=\"installCrew\" class='subheader'>\r\n        <h3>Install Crew Names</h3>\r\n        <div *ngFor =\"let crew of installCrew.controls; let i= index\">\r\n            <div class='alert alert-danger' *ngIf='crew?.invalid && (crew?.touched || crew?.dirty) '>\r\n                At least one install crew member's name is required.\r\n            </div> \r\n            <mat-form-field style='margin:10px' appearance=\"standard\"> \r\n                <mat-label> Crew Member Name: </mat-label>\r\n                <input type=\"text\" [formControlName]= \"i\" matInput>\r\n            </mat-form-field>\r\n            <button *ngIf='installCrew.length > 1' mat-stroked-button type=\"button\" (click)='removeCrew(i)'>Remove crew member</button>   \r\n        </div>\r\n        <button mat-button color=\"primary\" type=\"button\" (click)='addCrew()'>Add additional crew member</button>\r\n        \r\n    \r\n    </div> \r\n    <div class='subheader'>\r\n  <button  mat-flat-button color=\"primary\" type=\"submit\" [disabled] =\"!empForm.valid\">Next</button>\r\n</div>\r\n</form>\r\n\r\n\r\n \r\n","\r\nimport { Component, } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport {  Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent  {\r\n\r\n  user = new FormControl('');\r\n  password = new FormControl('')\r\n  authPassword= \"1234\";\r\n  authUsername= \"Admin\";\r\n\r\n  constructor(private router: Router,\r\n    private authS:AuthService) { }\r\n\r\n  auth() {\r\n   if(this.user.value == this.authUsername && this.password.value == this.authPassword){\r\n     this.router.navigateByUrl(\"emp-info\")\r\n     this.authS.didLogin()\r\n     this.authS.setStorageItem({\r\n       key: 'state',\r\n       value: 'true',\r\n     })\r\n   }\r\n  }\r\n\r\n\r\n}\r\n","<form (ngSubmit)=\"auth()\" id=\"authForm\">\r\n    <div class=\"form-group\">\r\n      <mat-form-field>\r\n      <mat-label>Username</mat-label>\r\n      <input matInput [formControl] = \"user\" name= \"user\"  type=\"username\" class=\"form-control\" id=\"username\">\r\n    </mat-form-field>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <mat-form-field>\r\n      <mat-label>Password:</mat-label>\r\n      <input matInput [formControl]= \"password\" name= \"pass\" type=\"password\" class=\"form-control\" id=\"password\">\r\n    </mat-form-field>\r\n    </div>\r\n    <button mat-flat-button color=\"primary\">Submit</button>\r\n</form> \r\n","import { Component } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeDetailsService } from '../../services/employee-details.service';\r\n\r\n@Component({\r\n  selector: 'manager-contact',\r\n  templateUrl: './manager-contact.component.html',\r\n  styleUrls: ['./manager-contact.component.css']\r\n})\r\nexport class ManagerContactComponent {\r\n\r\n  constructor(private empDetails:EmployeeDetailsService,\r\n    private route:Router) { \r\n  \r\n    }\r\n\r\n\r\n  step:number = 0 \r\n  unableContact:boolean = false;\r\n  managerName = new FormControl(\"\", [Validators.required]);\r\n  managerContact = new FormControl(\"\",  \r\n  [Validators.required,  \r\n  Validators.pattern('^(\\\\+\\\\d{1,2}\\\\s)?\\\\(?\\\\d{3}\\\\)?[\\\\s.-]?\\\\d{3}[\\\\s.-]?\\\\d{4}$')]);\r\n  managerResponse = new FormControl(\"\",  [Validators.required]);\r\n\r\n\r\n  proceed(){\r\n    switch(this.step)\r\n    {\r\n      case 0:\r\n      this.step = 1;\r\n      break;\r\n      case 1: \r\n      this.step = 2;\r\n      break;\r\n      case 2:\r\n      this.step = 3;\r\n      break;\r\n      case 3:\r\n      this.saveData()\r\n      this.empDetails.info.managerProceed = true;\r\n      this.route.navigate(['customer-sign'])\r\n      break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  no(){\r\n    this.unableContact = true;\r\n  }\r\n\r\n  saveData(){\r\n    this.empDetails.info.managerName = this.managerName.value;\r\n    this.empDetails.info.managerNumber = this.managerContact.value;\r\n    this.empDetails.info.managerInstructions = this.managerResponse.value;\r\n    \r\n  }\r\n\r\n  //template error functions\r\n\r\n  getErrorManagerName(){\r\n    if(this.managerName.hasError('required'))\r\n    return \"Please enter the name of the manager\"\r\n    return\r\n  }\r\n  getErrorManagerContact(){\r\n    if(this.managerContact.hasError('required'))\r\n    return \"Please enter manager's phone number\"\r\n\r\n    return this.managerContact.hasError('pattern') ? 'Not a valid phone number' : ''\r\n  }\r\n  getErrorManagerResponse(){\r\n    if(this.managerResponse.hasError('required'))\r\n    return \"Please enter a short summary of your conversation.\"\r\n    return\r\n  }\r\n\r\n}\r\n","<div class='subheader'>\r\n    <div *ngIf='step == 0 && !unableContact'>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label for=\"managerName\"> Salesperson/Manager's name: </mat-label>\r\n            <input matInput name='managerName' type=\"text\" [formControl]='managerName'>\r\n            <mat-error *ngIf=\"managerName.invalid\">\r\n                {{getErrorManagerName()}}\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label for=\"managerContact\"> Salesperson/Manager's contact number:</mat-label>\r\n            <input matInput name='managerContact' type=\"text\" [formControl]='managerContact'>\r\n            <mat-error *ngIf=\"managerContact.invalid\">\r\n                {{getErrorManagerContact()}}\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <br>\r\n        <button mat-flat-button color=\"primary\" [disabled]='!(managerName.valid && managerContact.valid)'\r\n            (click)=\"proceed()\"> Next </button>\r\n    </div>\r\n    <div *ngIf='step == 1 && !unableContact'>\r\n        Were you able to contact your salesperson/manager?\r\n        <br>\r\n        <button mat-flat-button color=\"primary\" (click)='proceed()'> Yes</button>\r\n        <button mat-flat-button color=\"warn\" (click)='no()'> No </button>\r\n    </div>\r\n    <div *ngIf='step == 2 && !unableContact'>\r\n        <mat-form-field style=\"width:100%;\" appearance=\"fill\">\r\n            <mat-label>\r\n                Please write a summary of what your salesperson/manager told you\r\n            </mat-label>\r\n            <br>\r\n            <textarea matInput placeholder=\"Instructions go here...\" name=\"managerResponse\" type=\"text\"\r\n                [formControl]='managerResponse'>        </textarea>\r\n            <mat-error *ngIf=\"managerResponse.invalid\">\r\n                {{getErrorManagerResponse()}}\r\n            </mat-error>\r\n        </mat-form-field>\r\n        <button mat-flat-button color=\"primary\" (click)='proceed()' [disabled]='managerResponse.valid ? false : true'>\r\n            Next </button>\r\n    </div>\r\n    <div *ngIf='step == 3 && !unableContact'>\r\n        Were you instructed to continue or not to continue installation/removal?\r\n        <br>\r\n        <button mat-flat-button color=\"primary\" (click)='proceed()'> Continue</button>\r\n        <button mat-flat-button color=\"warn\" (click)='no()'> Not to continue </button>\r\n    </div>\r\n\r\n    <div *ngIf='unableContact'>\r\n        <br>\r\n        Refer to instructions above.\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport {  Observable } from 'rxjs';\r\nimport {filter, pluck} from 'rxjs/operators'\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { StepService } from '../../services/step.service';\r\n\r\n@Component({\r\n  selector: 'navbar-below',\r\n  templateUrl: './navbar-below.component.html',\r\n  styleUrls: ['./navbar-below.component.css']\r\n})\r\nexport class NavbarBelowComponent {\r\n\r\n  loginStatus!:string\r\n  loginState$: Observable<string>\r\n\r\n  constructor( private auth: AuthService, private step:StepService) {\r\n    this.loginState$ = this.auth.storageChange$.pipe(\r\n      filter(({key}) => key  === 'state'),\r\n      pluck(\"value\"))\r\n  }\r\n\r\n  restart(){\r\n    this.step.reloadComponent()\r\n  }\r\n}\r\n","<div *ngIf='loginState$ ' class=\"container\" style='padding-top:20px; text-align: center;'>\r\n    <mat-divider></mat-divider>\r\n    <a mat-button color='accent' href=\"emp-info\" (click)='restart()' > Click to restart. </a>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  constructor() { }\n\n\n}\n","\r\n<div class=\"container\" style=\"padding-top: 20px; \">\r\n    <h1> Equipment Installation Form </h1>\r\n    <mat-divider></mat-divider> \r\n</div>  ","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MakePDFService } from '../../services/make-pdf.service';\r\nimport { PdfJsViewerComponent } from 'ng2-pdfjs-viewer';\r\n\r\n@Component({\r\n  selector: 'app-pdf-holder',\r\n  templateUrl: './pdf-holder.component.html',\r\n  styleUrls: ['./pdf-holder.component.css']\r\n})\r\nexport class PdfHolderComponent implements OnInit {\r\n\r\n  constructor(private pdf:MakePDFService\r\n  ) { }\r\n\r\n  @ViewChild('pdf') pagePdf!:ElementRef;\r\n  @ViewChild('pdfViewer') public pdfViewer!:PdfJsViewerComponent\r\n  uri!:any\r\n  arrayUri!:Uint8Array\r\n  \r\n  //access by tying /pdf in root\r\n async ngOnInit(): Promise<void> {\r\n    this.pdf.makePdf().then(uri => {\r\n      this.pdfViewer.pdfSrc = uri;\r\n      this.pdfViewer.refresh();\r\n    })\r\n  }\r\n  async downloadPDF(){\r\n    this.pdf.downloadPdf()\r\n  }\r\n}\r\n\r\n","<div style='width:100%; height:1000px;'>\r\n    <ng2-pdfjs-viewer #pdfViewer>\r\n    </ng2-pdfjs-viewer>\r\n</div>\r\n<br>\r\n<button mat-stroked-button (click)=\"downloadPDF()\">Download</button>\r\n\r\n","<div id=\"travelDisclaimertext\" *ngIf=\"step == 1  && !isCompleteInstall\" class=\"form-group\">\r\n    <p> \r\n        By signing here, customer acknowledges IFG has explained the complications regarding installation.\r\n        This may be due to product height, width, or other equipment specifications.\r\n        Customer understands that installation may cause damage to the product including: \r\n    </p>\r\n        <ul>\r\n                <li>\r\n                    Scratches\r\n                </li>\r\n                <li>\r\n                    Gouges\r\n                </li>\r\n                <li>\r\n                    Dents\r\n                </li>\r\n                <li>\r\n                    Loss of manufacturer warranty\r\n                </li>\r\n                <li>\r\n                    Decrease or loss of product functionality\r\n                </li>\r\n        </ul>\r\n        <p>\r\n        Customer also releases IFG of all liability during installation. \r\n        Customer may also decline to sign, but product may not be installed.\r\n    </p>\r\n</div>\r\n<div *ngIf=\"step == 2 && !isCompleteInstall\" class=\"form-group\">\r\n    <p>\r\n        IFG has informed me (customer owner or customer employee) that there is an issue with placing\r\n        this product in the final location. This issue is related to the product height, width, or other dimension\r\n        specs.\r\n    </p>\r\n    <p>\r\n        By signing here,(customer owner or customer employee) has given written consent to IFG to continue with\r\n        installation.\r\n        IFG will not be reponsible for any damage to the product during travel or installation.\r\n    </p>\r\n</div>\r\n\r\n<div id=\"travelDisclaimertext\" *ngIf=\"step == 1 && !isCompleteRemove && isCompleteInstall\" class=\"form-group\">\r\n    <p>\r\n        By signing here, customer acknowledges IFG has explained the risks and conditions regarding product removal\r\n        Customer will accept full liability for possible damages during removal, including:\r\n    </p>\r\n        <ul>\r\n                <li>\r\n                    Scratches\r\n                </li>\r\n                <li>\r\n                    Gouges\r\n                </li>\r\n                <li>\r\n                    Dents\r\n                </li>\r\n                <li>\r\n                    Loss of manufacturer warranty\r\n                </li>\r\n                <li>\r\n                    Decrease or loss of product functionality\r\n                </li>\r\n        </ul>\r\n        <p>\r\n        Customer may also decline to sign, but product may not be installed.\r\n    </p>\r\n</div>\r\n<div *ngIf=\"isComplete\" class=\"form-group\">\r\n    <p>The customer (customer or customer employee) has accepted and\r\n     inspected the product at the agreed final location and that the product is\r\n     defect free and in working condition. </p> \r\n     <p>The customer agrees to release all liability to IFG</p>\r\n </div>\r\n \r\n <div *ngIf=\"step == 2 && !isCompleteRemove && isCompleteInstall\" class=\"form-group\">\r\n     The customer is giving IFG permission to remove the old equipment for disposal. IFG will not reimburse credit\r\n to the customer for the old unit. IFG will not be responsible if there is any damage done while moving the product\r\n from the product location to the truck location.\r\n The customer (customer owner or customer employee) has given written or signed consent for IFG to remove their old\r\n product for disposal.\r\n </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SignatureHandlerService } from '../../services/signature-handler.service';\r\nimport { ValidDimService } from '../../services/valid-dim.service';\r\n\r\n@Component({\r\n  selector: 'problem-install',\r\n  templateUrl: './problem-install.component.html',\r\n  styleUrls: ['./problem-install.component.css']\r\n})\r\nexport class ProblemInstallComponent implements OnInit {\r\n\r\n  constructor(private valid:ValidDimService,\r\n    private sig:SignatureHandlerService) { \r\n    this.valid.testObs.subscribe(install => this.isCompleteInstall = install)\r\n    this.valid.testObs2.subscribe(remove => this.isCompleteRemove = remove)\r\n    if(this.isCompleteInstall && this.isCompleteRemove) \r\n    {\r\n      this.isComplete = true;\r\n    } else this.isComplete = false;\r\n    \r\n  }\r\n    isCust:boolean = false;\r\n    step:number = 0;\r\n    isCompleteInstall:boolean = false;\r\n    isCompleteRemove:boolean = false;\r\n    isComplete:boolean;\r\n    isFinalRemoveStep:boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    this.isCust = this.sig.isCust\r\n    this.step = this.sig.subStep\r\n  }\r\n\r\n}\r\n","<div class='subheader'>\r\n    <div *ngIf=\"didInstall\" class=\"form-group\">\r\n        <p>Proceed to installation. </p>\r\n    </div>\r\n    <div *ngIf=\"needInstallImage\">\r\n        Press next to take images of installation.\r\n    </div>\r\n\r\n    <div *ngIf=\"needRemoval\">\r\n        <br>\r\n        <p>Proceed to uninstallation. </p>\r\n    </div>\r\n    <div *ngIf='needRemoveImage'>\r\n        Press next to take images of removal.\r\n    </div>\r\n    <button (click)=\"next()\" class=\"btn btn-default\">Next</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ImageHolderService } from '../../services/image-holder.service';\r\nimport { ValidDimService } from '../../services/valid-dim.service';\r\n\r\n@Component({\r\n  selector: 'app-proceed',\r\n  templateUrl: './proceed.component.html',\r\n  styleUrls: ['./proceed.component.css']\r\n})\r\nexport class ProceedComponent implements OnInit {\r\n\r\n  constructor(private valid:ValidDimService,\r\n    private route:Router, \r\n    private image:ImageHolderService) { \r\n    valid.testObs.subscribe(install => {this.didInstall = install\r\n       })\r\n     valid.removeObs.subscribe(neededSig => {\r\n       this.didRemove = neededSig\r\n     })  \r\n      this.needRemoval= valid.neededRemoval \r\n   \r\n  }\r\n\r\n  needRemoval: boolean;\r\n  didInstall!:boolean;\r\n  didRemove!:boolean;\r\n  needRemoveImage!:boolean;\r\n  needInstallImage!:boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.needInstallImage = this.image.needsInstallImages\r\n    this.needRemoveImage = this.image.needsRemoveImages\r\n  }\r\n\r\n  next()\r\n  {\r\n    if(this.image.needsInstallImages || this.image.needsRemoveImages)\r\n    this.route.navigate(['image']) \r\n    else if(this.valid.installEverFalse == false){\r\n      this.route.navigate(['customer-sign'])\r\n    } else \r\n    this.route.navigate(['complete'])\r\n  }\r\n}\r\n","\r\n    <div *ngIf=\"!showConfirm\" class=\"form-group\" style=\"border: black 1px solid; padding: 20px;\">\r\n      <label for=\"safety\">Safety</label>\r\n      <p>Make sure you have proper PPE prior to installation.</p>\r\n      <button (click)=\"next()\" mat-flat-button color=\"primary\">Next</button>\r\n    </div>\r\n\r\n<div *ngIf=\"showConfirm\" class=\"form-group\">\r\n  <p>\r\n     Do you have proper PPE equipped?\r\n  </p>\r\n<div style=\"padding:5px\">\r\n  <button (click)=\"next()\"  mat-flat-button color=\"primary\"> Yes</button>\r\n</div>\r\n<div style=\"padding:5px\">\r\n<button (click)=\"back()\" style=\"padding:5px\" mat-flat-button color=\"warn\">  No </button>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-safety',\r\n  templateUrl: './safety.component.html',\r\n  styleUrls: ['./safety.component.css']\r\n})\r\nexport class SafetyComponent {\r\n\r\n  constructor(private router: Router, \r\n    ) { }\r\n\r\n    showConfirm:boolean = false;\r\n\r\n\r\n\r\n  next() {\r\n    if(!this.showConfirm){\r\n      this.showConfirm = true;\r\n    } else {\r\n      this.router.navigate(['dimension-form'])\r\n    }\r\n  }\r\n  back(){\r\n    if(this.showConfirm){\r\n      this.showConfirm = false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, ReplaySubject } from 'rxjs'\r\n\r\n\r\nexport interface StorageChange {\r\n  key:string;\r\n  value:string;\r\n}\r\n\r\nexport interface StorageGetItem {\r\n  key:string;\r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  public storageChange$:ReplaySubject<StorageChange> = new ReplaySubject;\r\n\r\n  constructor() { \r\n    \r\n  }\r\n\r\n  public setStorageItem(change:StorageChange):void {\r\n    window.sessionStorage.setItem(change.key, change.value);\r\n    this.storageChange$.next(change)\r\n  }\r\n\r\n  public getStorageItem(getItem:StorageGetItem):void {\r\n    window.sessionStorage.getItem(getItem.key)\r\n  }\r\n\r\n  passedLogin: boolean  = false;\r\n  passedLoginObs = new BehaviorSubject(this.passedLogin)\r\n\r\n  didLogin() {\r\n    this.passedLoginObs.next(true)\r\n    sessionStorage.setItem('authstate', 'true')\r\n    \r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Dimensions } from '../classes/dimensions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DimensionService {\r\n\r\n  travelDimArray: Array<Dimensions> = []\r\n  private travelArraysubject = new BehaviorSubject(this.travelDimArray)\r\n  travelArray = this.travelArraysubject.asObservable()\r\n\r\n  productDimArray: Array<Dimensions> = []\r\n  private productArraysubject = new BehaviorSubject(this.productDimArray)\r\n  productArray = this.productArraysubject.asObservable()\r\n\r\n  travelRemoveDimArray: Array<Dimensions> = []\r\n  private travelRemoveArraysubject = new BehaviorSubject(this.travelRemoveDimArray)\r\n  travelRemoveArray = this.travelRemoveArraysubject.asObservable()\r\n\r\n  productRemoveDimArray: Array<Dimensions> = []\r\n  private productRemoveArraysubject = new BehaviorSubject(this.productRemoveDimArray)\r\n  productRemoveArray = this.productRemoveArraysubject.asObservable()\r\n\r\n  constructor() { }\r\n \r\n  setTravelArray(pArray:Array<Dimensions>){\r\n    this.travelArraysubject.next(pArray)\r\n   \r\n  }\r\n\r\n  setProductArray(pArray:Array<Dimensions>){\r\n    this.productArraysubject.next(pArray)\r\n  }\r\n\r\n  useOldTravel() {\r\n    this.travelRemoveDimArray = this.travelDimArray\r\n  }\r\n  setTravelRemoveArray (pArray:Array<Dimensions>){\r\n    this.travelRemoveArraysubject.next(pArray)\r\n  }\r\n\r\n  setProductRemoveArray(pArray:Array<Dimensions>){\r\n    this.productRemoveArraysubject.next(pArray)\r\n  }\r\n\r\n  createDimensionArray() {\r\n    let newArray = new Array<Dimensions>()\r\n    return newArray\r\n  }\r\n\r\n  pushDimensionArray(array:Array<Dimensions>, rawWidth:string, rawHeight:string){\r\n    let dimParsed = new Dimensions(rawWidth,rawHeight)\r\n    array.push(dimParsed)\r\n    return array\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EmployeeInfo } from '../classes/employee-info';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeDetailsService {\r\n\r\n  constructor() { \r\n  }\r\n\r\n  info:EmployeeInfo = {\r\n    date: new Date,\r\n    orderNumber: \"\",\r\n    installCrew: [],\r\n    salesRep:\"\",\r\n    salesRepContactNumber:\"\",\r\n    custRefused:false\r\n  }\r\n\r\n  public submitData(data:any){\r\n     this.info.date = data.inputDate\r\n     this.info.orderNumber = data.orderNumber;\r\n     this.info.salesRep = data.salesRep;\r\n     this.info.salesRepContactNumber = data.salesRepContactNumber;\r\n     this.info.installCrew = data.installCrew\r\n  }\r\n\r\n  public custRefusePrep(){\r\n    this.info.custRefused = true;\r\n    this.info.managerName = \"\";\r\n    this.info.managerNumber = \"\"\r\n    this.info.managerInstructions =\"\";\r\n    this.info.managerProceed = false;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageHolderService {\r\n\r\n  constructor() { }\r\n\r\n  needsInstallImages!:boolean \r\n  needsRemoveImages!:boolean \r\n  \r\n  //contains string uri's of images\r\n  installImage:Array<string> = []\r\n  removeImage:Array<string> = []\r\n\r\n  needsInstall(){\r\n    this.needsInstallImages = true;\r\n  }\r\n  finishInstall(){\r\n    this.needsInstallImages = false\r\n  }\r\n  needsRemove(){\r\n    this.needsRemoveImages = true;\r\n  }\r\n  finishRemove(){\r\n    this.needsRemoveImages = false;\r\n  }\r\n\r\n  saveInstall(array:Array<string>){\r\n    this.installImage = array;\r\n  }\r\n  saveRemove(array:Array<string>){\r\n    this.removeImage = array;\r\n  }\r\n  getInstallImages(){\r\n    return this.installImage\r\n  }\r\n  getRemoveImage(){\r\n    return this.removeImage\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DimensionService } from './dimension.service';\r\nimport { SignatureHandlerService } from './signature-handler.service';\r\nimport { PDFDocument,PDFForm } from 'pdf-lib'\r\nimport { Dimensions } from '../classes/dimensions';\r\nimport { SignatureInfo } from '../classes/signature-info';\r\nimport { PdfInfo } from '../classes/pdf-info';\r\nimport download from 'downloadjs'\r\nimport { EmployeeInfo } from '../classes/employee-info';\r\nimport { EmployeeDetailsService } from './employee-details.service';\r\nimport { ImageHolderService } from './image-holder.service';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MakePDFService {\r\n\r\n  constructor(private sig: SignatureHandlerService,\r\n    private dim: DimensionService,\r\n    private emp: EmployeeDetailsService,\r\n    private image: ImageHolderService, \r\n    private datePipe:DatePipe) {\r\n    //signature arrays hold: 1. string uri of the signature 2. a string name of the individual who signed it \r\n    //3. if it was a customer or employee signature 4. the step the signature was obtained at\r\n    // steps are handled in the checkStatus in the signature-handler service\r\n    // generally the format is '(install||remove)' + _+ '(customer||employee) + (step_number)'\r\n    // example install_customer1 or remove_employee2\r\n    this.arrayCustomer = this.sig.custSigArray\r\n    this.arrayEmployee = this.sig.employSigArray\r\n    //dimension arrays hold: 1. An array of the widths (doorway/product) parsed in float.\r\n    // 2. An array of the heights entered.\r\n    // 3. the units (if applicable) <-- can probably remove this.\r\n    this.arrayInstallDoorDim = this.dim.travelDimArray\r\n    this.arrayInstallProductDim = this.dim.productDimArray\r\n    this.arrayRemoveDoorDim = this.dim.travelRemoveDimArray\r\n    this.arrayRemoveProductDim = this.dim.productRemoveDimArray\r\n    this.employeeInfo = this.emp.info\r\n\r\n  }\r\n  arrayCustomer: Array<SignatureInfo> = []\r\n  arrayEmployee: Array<SignatureInfo> = []\r\n  arrayInstallDoorDim: Array<Dimensions> = []\r\n  arrayInstallProductDim: Array<Dimensions> = []\r\n  arrayRemoveDoorDim: Array<Dimensions> = []\r\n  arrayRemoveProductDim: Array<Dimensions> = []\r\n  employeeInfo: EmployeeInfo\r\n\r\n  //defines all of the fields in the pdf to fill\r\n  p = new PdfInfo\r\n\r\n  finalPDF: any\r\n\r\n  formUrl = 'assets/equipment.pdf'\r\n\r\n  async makePdf() {\r\n    const formPdfBytes = await fetch(this.formUrl).then(res => res.arrayBuffer());\r\n    const pdfDoc = await PDFDocument.load(formPdfBytes);\r\n    const form = pdfDoc.getForm();\r\n\r\n    // iterate to get your info\r\n    await this.iterate();\r\n    \r\n    // checks if Manager response was necessary and adds a page with details if it exists\r\n    this.embedManagerResponse(pdfDoc)\r\n    \r\n    //add images, abstract some of this shit away into functions\r\n    this.embedImages(pdfDoc)\r\n\r\n    // mandatory fields (door height, order number etc)\r\n    this.embedMandatoryFields(form)\r\n   \r\n    // conditional fields (logic needed to fill depending on circumstance)\r\n    this.embedConditionalFields(pdfDoc,form)\r\n   \r\n    const pdf8bit = await pdfDoc.save()\r\n    //trigger auto downloading \r\n   \r\n    this.finalPDF = pdfDoc\r\n  \r\n    return pdf8bit\r\n  }\r\n\r\n  async downloadPdf() {\r\n    const pdfBytes = await this.finalPDF.save()\r\n    //fileName = date, order, IFGSaleRepName, CustomerPrint1, EmployeePrint1\r\n    const fileName = \"equipment_installation_\" + this.p.Date + \"_\" + this.p.IFGSaleRepName + \"_\" + this.p.CustomerPrint1 + \"_\" + this.p.EmployeePrint1 + \".pdf\"\r\n    download(pdfBytes, fileName, \"application/pdf\");\r\n   \r\n  }\r\n\r\n  // sets class properties from data\r\n  private async iterate() {\r\n    var tempDate = new Date().toLocaleString()\r\n    var shortDate = this.datePipe.transform(tempDate, 'MM-dd-YYYY')\r\n      if(shortDate)\r\n      {\r\n       this.p.Date = shortDate\r\n      }\r\n   \r\n    \r\n    this.iterateCustomer()\r\n    this.iterateEmployee()\r\n    this.iterateInstallDoorDimensions()\r\n    this.iterateRemoveDoorDimensions()\r\n    this.iterateNewProductDimensions()\r\n    this.iterateOldProductDimensions()\r\n    this.iterateImages()\r\n\r\n    \r\n\r\n  }\r\n  private iterateCustomer() {\r\n    \r\n    if (this.arrayCustomer.length != 0) {\r\n      this.arrayCustomer.forEach(item => {\r\n        switch (item.step) {\r\n          case \"customer_install1\":\r\n            \r\n            this.p.CustomerPrint1 = item.name\r\n            this.p.CustomerSign1 = item.signatureImg\r\n            break;\r\n          case \"customer_remove1\":\r\n           \r\n            this.p.CustomerPrint2 = item.name\r\n            this.p.CustomerSign2 = item.signatureImg\r\n            break;\r\n          case \"customer_install2\":\r\n           \r\n            this.p.CustomerPrint4 = item.name;\r\n            this.p.CustomerSign4 = item.signatureImg;\r\n            break;\r\n          case \"customer_remove2\":\r\n           \r\n            this.p.CustomerPrint5 = item.name\r\n            this.p.CustomerSign5 = item.signatureImg\r\n            break;\r\n          case \"customer_installFinal\":\r\n          \r\n            this.p.CustomerPrint3 = item.name\r\n            this.p.CustomerSign3 = item.signatureImg\r\n           \r\n            break;\r\n          default:\r\n        }\r\n      })\r\n    }\r\n  }\r\n  private iterateEmployee() {\r\n \r\n    if (this.arrayEmployee.length != 0) {\r\n      this.arrayEmployee.forEach(item => {\r\n        switch (item.step) {\r\n          case \"employee_install1\":\r\n            this.p.EmployeePrint1 = item.name;\r\n            this.p.EmployeeSign1 = item.signatureImg;\r\n            break;\r\n          case \"employee_remove1\":\r\n            this.p.EmployeePrint2 = item.name;\r\n            this.p.EmployeeSign2 = item.signatureImg;\r\n        }\r\n      })\r\n    }\r\n  }\r\n  private iterateInstallDoorDimensions() {\r\n    var array = this.arrayInstallDoorDim\r\n    if (array.length != 0) {\r\n      const resultHeight = this.getHeight(array)\r\n      const resultWidth = this.getWidth(array)\r\n      this.p.DoorHeight = resultHeight.toString()\r\n      this.p.DoorWidth = resultWidth.toString()\r\n    }\r\n  }\r\n  private iterateRemoveDoorDimensions() {\r\n    var array = this.arrayRemoveDoorDim\r\n    if (array.length != 0) {\r\n      const resultHeight = this.getHeight(array)\r\n      const resultWidth = this.getWidth(array)\r\n      this.p.OldDoorHeight = resultHeight.toString()\r\n      this.p.OldDoorWidth = resultWidth.toString()\r\n    }\r\n  }\r\n  private iterateNewProductDimensions() {\r\n    var array = this.arrayInstallProductDim\r\n    if (array.length != 0) {\r\n      const resultHeight = this.getHeight(array)\r\n      const resultWidth = this.getWidth(array)\r\n      this.p.ProductHeight = resultHeight.toString()\r\n      this.p.ProductWidth = resultWidth.toString()\r\n    }\r\n  }\r\n  private iterateOldProductDimensions() {\r\n  \r\n    var array = this.arrayRemoveProductDim\r\n    if (array.length != 0) {\r\n      const resultHeight = this.getHeight(array)\r\n      const resultWidth = this.getWidth(array)\r\n      this.p.OldProductHeight = resultHeight.toString()\r\n      this.p.OldProductWidth = resultWidth.toString()\r\n    }\r\n  }\r\n  private iterateImages(){\r\n    this.p.InstallImages = this.image.getInstallImages()\r\n    this.p.RemoveImages = this.image.getRemoveImage()\r\n  }\r\n\r\n  private getHeight(array: Array<Dimensions>) {\r\n    var result: Array<number> = []\r\n    array.forEach(item => {\r\n      result.push(item.height)\r\n    })\r\n    return result\r\n  }\r\n  private getWidth(array: Array<Dimensions>) {\r\n    var result: Array<number> = []\r\n    array.forEach(item => {\r\n      result.push(item.width)\r\n    })\r\n    return result\r\n  }\r\n\r\n  private checkEmployeeInfoIsRefuse() {\r\n    var obj = this.employeeInfo\r\n    this.p.CrewName = obj.installCrew.toString()\r\n    this.p.OrderNumber = obj.orderNumber.toString()\r\n    this.p.IFGSaleRepName = obj.salesRep\r\n    this.p.IFGSaleRepContactNumber = obj.salesRepContactNumber\r\n    if (obj.custRefused) {\r\n      this.checkRefuseInfo()\r\n      return false\r\n    } else return true\r\n  }\r\n  private checkRefuseInfo() {\r\n    var obj = this.employeeInfo\r\n    this.p.ManagerInstructions = obj.managerInstructions\r\n    this.p.ManagerName = obj.managerName\r\n    this.p.ManagerNumber = obj.managerNumber\r\n    this.p.ManagerProceed = obj.managerProceed\r\n  }\r\n\r\n  // abstracted pdf embed functions\r\n  \r\n  private embedManagerResponse(pdfDoc: PDFDocument) {\r\n    if (!(this.checkEmployeeInfoIsRefuse())) {\r\n\r\n      const page = pdfDoc.addPage([350, 350])\r\n      var textsize = 10\r\n      var labelX = 30;\r\n      var textX = 150;\r\n\r\n\r\n      var mNY1 = 300\r\n      page.drawText('Manager Name:', { x: labelX, y: mNY1, size: textsize })\r\n      page.drawText(this.p.ManagerName!, { x: textX, y: mNY1, size: textsize })\r\n\r\n      var miY = 240\r\n      page.drawText('Manager Instructions', { x: labelX, y: miY, size: textsize })\r\n      page.drawText(this.p.ManagerInstructions!, { x: textX, y: miY, size: textsize, })\r\n\r\n      var mnY = 180\r\n      page.drawText('Manager Number:', { x: labelX, y: mnY, size: textsize })\r\n      page.drawText(this.p.ManagerNumber!, { x: textX, y: mnY, size: textsize })\r\n\r\n      var pY = 120\r\n      page.drawText('Instructed to proceed?:', { x: labelX, y: pY, size: textsize })\r\n      if (this.p.ManagerProceed) {\r\n        page.drawText('yes', { x: textX, y: pY, size: textsize })\r\n      } else page.drawText('no', { x: textX, y: pY, size: textsize })\r\n    }\r\n  }\r\n  private async embedImages(pdfDoc: PDFDocument) {\r\n    if (this.p.InstallImages) {\r\n      for (const value of this.p.InstallImages) {\r\n      \r\n\r\n        const page = pdfDoc.addPage()\r\n\r\n        var pageWidth = page.getWidth()\r\n        var pageHeight = page.getHeight()\r\n\r\n        var imageA = await pdfDoc.embedJpg(value)\r\n        const imageDims = imageA.scaleToFit(pageWidth - 100, pageHeight - 100)\r\n        var imageWidth = imageDims.width\r\n        var imageHeight = imageDims.height\r\n\r\n        // center the boy\r\n        var startingX = (pageWidth - imageWidth) / 2\r\n        var startingY = (pageHeight - imageHeight) / 2\r\n\r\n        page.drawImage(imageA, {\r\n          x: startingX,\r\n          y: startingY,\r\n          width: imageWidth,\r\n          height: imageHeight,\r\n        })\r\n      }\r\n    }\r\n\r\n    if (this.p.RemoveImages) {\r\n      for (const value of this.p.RemoveImages) {\r\n\r\n        const page = pdfDoc.addPage()\r\n\r\n        var pageWidth = page.getWidth()\r\n        var pageHeight = page.getHeight()\r\n\r\n        var imageA = await pdfDoc.embedJpg(value)\r\n        const imageDims = imageA.scaleToFit(pageWidth - 100, pageHeight - 100)\r\n        var imageWidth = imageDims.width\r\n        var imageHeight = imageDims.height\r\n\r\n        // center the box\r\n        var startingX = (pageWidth - imageWidth) / 2\r\n        var startingY = (pageHeight - imageHeight) / 2\r\n\r\n        page.drawImage(imageA, {\r\n          x: startingX,\r\n          y: startingY,\r\n          width: imageWidth,\r\n          height: imageHeight,\r\n        })\r\n      }\r\n    }\r\n\r\n  }\r\n  private embedMandatoryFields(form: PDFForm) {\r\n    // mandatory fields (door height, order number etc)\r\n    const dateField = form.getTextField('Date')\r\n   \r\n    dateField.setText(this.p.Date)\r\n \r\n\r\n    const CrewName = form.getTextField('CrewName')\r\n    CrewName.setText(this.p.CrewName)\r\n\r\n    const OrderNumber = form.getTextField('OrderNumber')\r\n    OrderNumber.setText(this.p.OrderNumber)\r\n\r\n    const IFGSaleRepName = form.getTextField('IFGSaleRepName')\r\n    IFGSaleRepName.setText(this.p.IFGSaleRepName)\r\n\r\n    const IFGSaleRepContactNumber = form.getTextField('IFGSaleRepContactNumber')\r\n    IFGSaleRepContactNumber.setText(this.p.IFGSaleRepContactNumber)\r\n\r\n    var doorInstallHeight = this.p.DoorHeight\r\n    const doorInstallHeightField = form.getTextField('DoorHeight')\r\n    doorInstallHeightField.setText(doorInstallHeight)\r\n\r\n    var doorInstallWidth = this.p.DoorWidth\r\n    const doorInstallWidthField = form.getTextField('DoorWidth')\r\n    doorInstallWidthField.setText(doorInstallWidth)\r\n\r\n    var oldDoorInstallHeight = this.p.OldDoorHeight\r\n    const oldDoorInstallHeightField = form.getTextField('OldDoorHeight')\r\n    oldDoorInstallHeightField.setText(oldDoorInstallHeight)\r\n\r\n    var oldDoorInstallWidth = this.p.OldDoorWidth\r\n    const oldDoorInstallWidthField = form.getTextField('OldDoorWidth')\r\n    oldDoorInstallWidthField.setText(oldDoorInstallWidth)\r\n\r\n    var productInstallHeight = this.p.ProductHeight\r\n    const productInstallHeightField = form.getTextField('ProductHeight')\r\n    productInstallHeightField.setText(productInstallHeight)\r\n\r\n    var productInstallWidth = this.p.ProductWidth\r\n    const productInstallWidthField = form.getTextField('ProductWidth')\r\n    productInstallWidthField.setText(productInstallWidth)\r\n\r\n    var oldProductInstallHeight = this.p.OldProductHeight\r\n    const oldProductInstallHeightField = form.getTextField('OldProductHeight')\r\n    oldProductInstallHeightField.setText(oldProductInstallHeight)\r\n\r\n    var oldProductInstallWidth = this.p.OldProductWidth\r\n    const oldProductInstallWidthField = form.getTextField('OldProductWidth')\r\n    oldProductInstallWidthField.setText(oldProductInstallWidth)\r\n  }\r\n  private embedConditionalFields(pdfDoc: PDFDocument, form: PDFForm) {\r\n    this.checkCustomerFields(pdfDoc, form)\r\n    this.checkEmployeeFields(pdfDoc, form)\r\n  }\r\n\r\n  private async checkCustomerFields(pdfDoc: PDFDocument, form: PDFForm) {\r\n    if (this.p.CustomerSign1.length > 0) {\r\n      const CustomerSign1 = form.getButton('CustomerSign1')\r\n      var embimg = await pdfDoc.embedPng(this.p.CustomerSign1)\r\n      CustomerSign1.setImage(embimg)\r\n\r\n      const CustomerPrint1 = form.getTextField('CustomerPrint1')\r\n      CustomerPrint1.setText(this.p.CustomerPrint1)\r\n\r\n      const CustomerDate1 = form.getTextField('CustomerDate1')\r\n      CustomerDate1.setText(this.p.Date)\r\n    }\r\n\r\n\r\n    if (this.p.CustomerSign2.length > 0) {\r\n      const CustomerSign2 = form.getButton('CustomerSign2')\r\n      var embimg = await pdfDoc.embedPng(this.p.CustomerSign2)\r\n      CustomerSign2.setImage(embimg)\r\n\r\n      const CustomerPrint2 = form.getTextField('CustomerPrint2')\r\n      CustomerPrint2.setText(this.p.CustomerPrint2)\r\n\r\n      const CustomerDate2 = form.getTextField('CustomerDate2')\r\n      CustomerDate2.setText(this.p.Date)\r\n    }\r\n\r\n    if (this.p.CustomerSign3.length > 0) {\r\n      const CustomerSign3 = form.getButton('CustomerSign3')\r\n      var embimg = await pdfDoc.embedPng(this.p.CustomerSign3)\r\n      CustomerSign3.setImage(embimg)\r\n\r\n      const CustomerPrint3 = form.getTextField('CustomerPrint3')\r\n      CustomerPrint3.setText(this.p.CustomerPrint3)\r\n\r\n      const CustomerDate3 = form.getTextField('CustomerDate3')\r\n      CustomerDate3.setText(this.p.Date)\r\n    }\r\n\r\n    if (this.p.CustomerSign4.length > 0) {\r\n      const CustomerSign4 = form.getButton('CustomerSign4')\r\n      var embimg = await pdfDoc.embedPng(this.p.CustomerSign4)\r\n      CustomerSign4.setImage(embimg)\r\n\r\n      const CustomerPrint4 = form.getTextField('CustomerPrint4')\r\n      CustomerPrint4.setText(this.p.CustomerPrint4)\r\n\r\n      const CustomerDate4 = form.getTextField('CustomerDate4')\r\n      CustomerDate4.setText(this.p.Date)\r\n    }\r\n\r\n    if (this.p.CustomerSign5.length > 0) {\r\n      const CustomerSign5 = form.getButton('CustomerSign5')\r\n      var embimg = await pdfDoc.embedPng(this.p.CustomerSign5)\r\n      CustomerSign5.setImage(embimg)\r\n\r\n      const CustomerPrint5 = form.getTextField('CustomerPrint5')\r\n      CustomerPrint5.setText(this.p.CustomerPrint5)\r\n\r\n      const CustomerDate5 = form.getTextField('CustomerDate5')\r\n      CustomerDate5.setText(this.p.Date)\r\n    }\r\n  }\r\n  private async checkEmployeeFields(pdfDoc: PDFDocument, form: PDFForm) {\r\n    if (this.p.EmployeeSign1.length > 0) {\r\n      const EmployeeSign1 = form.getButton('EmployeeSign1')\r\n      var embimg = await pdfDoc.embedPng(this.p.EmployeeSign1)\r\n      EmployeeSign1.setImage(embimg)\r\n\r\n      const EmployeePrint1 = form.getTextField('EmployeePrint1')\r\n      EmployeePrint1.setText(this.p.EmployeePrint1)\r\n\r\n      const EmployeeDate1 = form.getTextField('EmployeeDate1')\r\n      EmployeeDate1.setText(this.p.Date)\r\n    }\r\n\r\n   \r\n    if (this.p.EmployeeSign2.length > 0) {\r\n      const EmployeeSign2 = form.getButton('EmployeeSign2')\r\n      var embimg = await pdfDoc.embedPng(this.p.EmployeeSign2)\r\n      EmployeeSign2.setImage(embimg)\r\n\r\n      const EmployeePrint2 = form.getTextField('EmployeePrint2')\r\n      EmployeePrint2.setText(this.p.EmployeePrint2)\r\n\r\n      const EmployeeDate2 = form.getTextField('EmployeeDate2')\r\n      EmployeeDate2.setText(this.p.Date)\r\n    }\r\n  }\r\n\r\n}\r\n  ","import { Injectable } from '@angular/core';\r\nimport {Router } from '@angular/router';\r\nimport { SignatureInfo } from '../classes/signature-info';\r\nimport { StepService } from './step.service';\r\nimport { ValidDimService } from './valid-dim.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignatureHandlerService {\r\n\r\n\r\n  custSigArray: SignatureInfo[] = []\r\n  employSigArray: SignatureInfo[] = []\r\n\r\n  subStep: number = 0;\r\n  isCust: boolean = true\r\n  isEmployee: boolean = false;\r\n  passInstallStatus: boolean = false;\r\n  passRemoveStatus: boolean = false;\r\n\r\n\r\n  completeCustSig: boolean = false;\r\n  completeEmpSig: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private step: StepService,\r\n    private valid: ValidDimService\r\n    ) {\r\n    this.valid.testObs.subscribe(x => this.passInstallStatus = x)\r\n    this.valid.testObs2.subscribe(x => this.passRemoveStatus = x)\r\n\r\n  }\r\n\r\n  //call to update state with valid service\r\n  checkDiff() {\r\n    const custDiff = this.getCustArrayDiff()\r\n    const empDiff = this.getEmpArrayDiff()\r\n    if (!(this.passInstallStatus && this.passRemoveStatus)) {\r\n      var cust = this.checkCust(custDiff, empDiff)\r\n    } else cust = true;\r\n    var step = this.checkStep1(custDiff, empDiff)\r\n    this.subStep = step;\r\n    this.isCust = cust;\r\n  }\r\n  checkRepeat() {\r\n    switch (this.checkStatus()) {\r\n      case 1:\r\n        if (!this.checkComplete()) {\r\n          this.step.reloadComponent()\r\n        } else {\r\n          this.valid.installComplete()\r\n          this.router.navigate(['check-remove'])\r\n        }\r\n        break;\r\n      case 2: if (!this.checkComplete()) {\r\n        this.step.reloadComponent()\r\n      } else {\r\n        this.valid.removeComplete()\r\n        this.router.navigate(['proceed'])\r\n      }\r\n        break;\r\n      case 3:\r\n        this.router.navigate(['complete'])\r\n    }\r\n  }\r\n\r\n  checkSigIsCust() {\r\n    var v = this.checkCustStep() ? true : false\r\n    return v\r\n  }\r\n\r\n  createSigInfo(uri: string, name: string, date:Date) {\r\n    var y = new SignatureInfo\r\n    y.date = date;\r\n    y.isCustomer = this.isCust\r\n    y.isEmployee = !this.isCust\r\n    y.step = this.checkStep()\r\n    y.signatureImg = uri;\r\n    y.name = name;\r\n    return y\r\n  }\r\n\r\n  pushtoArray(siginfo: SignatureInfo) {\r\n    var returnCode: number;\r\n    if (siginfo.isCustomer == true) {\r\n      this.custSigArray.push(siginfo)\r\n      returnCode = 1\r\n    } else\r\n      if (siginfo.isEmployee == true) {\r\n        this.employSigArray.push(siginfo)\r\n        returnCode = 2\r\n      } else returnCode = 0\r\n    return returnCode\r\n  }\r\n  private getCustArrayDiff() {\r\n    var result = this.valid.custSig - this.custSigArray.length\r\n    return result\r\n  }\r\n  private getEmpArrayDiff() {\r\n    var result = this.valid.employeeSig - this.employSigArray.length\r\n    return result\r\n  }\r\n\r\n  private checkCust(custDiff: number, empDiff: number) {\r\n    if (custDiff > empDiff) return true\r\n    if (custDiff == empDiff) return false\r\n    if (custDiff < empDiff) return true\r\n    return false\r\n  }\r\n  private checkStep1(custDiff: number, empDiff: number) {\r\n    var result = 0\r\n    if (custDiff > empDiff || custDiff == empDiff) result = 1\r\n    if (custDiff > empDiff && empDiff == 0) result = 2\r\n    return result\r\n  }\r\n\r\n\r\n  private checkLength() {\r\n    var v = this.custSigArray.length + this.employSigArray.length\r\n    return v\r\n\r\n  }\r\n  private checkComplete() {\r\n    if (this.checkLength() == this.valid.sigNumber) {\r\n      return true\r\n    } else\r\n      return false\r\n  }\r\n  private checkStatus() {\r\n    if (this.passInstallStatus && this.passRemoveStatus) return 3\r\n    if (!this.passInstallStatus) return 1\r\n    if (!this.passRemoveStatus) return 2\r\n    return 0\r\n  }\r\n\r\n  private checkCustStep() {\r\n    var result\r\n    if (this.checkLength() % 2 == 0) result = true;\r\n    else result = false;\r\n    if (this.passInstallStatus && this.passRemoveStatus)\r\n      result = true;\r\n    this.isCust = result;\r\n    return result\r\n  }\r\n\r\n  private checkStep() {\r\n    var person;\r\n    var state;\r\n    switch (this.checkStatus()) {\r\n      case 1:\r\n        state = 'install'\r\n        break;\r\n      case 2:\r\n        state = 'remove'\r\n        break\r\n    }\r\n    if (this.isCust) person = 'customer'\r\n    else person = 'employee'\r\n    if (this.passInstallStatus && this.passRemoveStatus) {\r\n      this.isCust = true;\r\n      this.isEmployee = false;\r\n      state = \"installFinal\"\r\n      person = \"customer\"\r\n      return   person + \"_\" + state\r\n    }\r\n    return (person + \"_\" + state + this.subStep)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeDetailsService } from './employee-details.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StepService {\r\n\r\n  constructor(private route: Router,\r\n    private emp: EmployeeDetailsService) {\r\n     }\r\n\r\n\r\n  setStepRefuse(){\r\n    this.emp.custRefusePrep();\r\n    this.route.navigate(['cust-refuse']);\r\n  }\r\n\r\n  restart() {\r\n    this.route.navigate(['emp-info'])\r\n    this.reloadComponent()\r\n  }\r\n\r\n  reloadComponent(hasParams?:string) {\r\n    let currentUrl = this.route.url;\r\n        this.route.routeReuseStrategy.shouldReuseRoute = () => false;\r\n        this.route.onSameUrlNavigation = 'reload';\r\n        if(hasParams)\r\n        {\r\n          this.route.navigate([hasParams],{queryParams:{}})\r\n        } else\r\n        this.route.navigate([currentUrl]);\r\n    }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { DimensionService } from './dimension.service';\r\nimport { ImageHolderService } from './image-holder.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidDimService {\r\n\r\n  constructor(private dimService:DimensionService, \r\n    private image:ImageHolderService) { }\r\n\r\n  passInstall:boolean = false;\r\n  passRemoval:boolean = false;\r\n  neededRemoval:boolean = false;\r\n\r\n  testObs = new BehaviorSubject(this.passInstall)\r\n  testObs2 = new BehaviorSubject (this.passRemoval)\r\n\r\n  installRequiredSigs: boolean = false;\r\n  removeRequiredSigs:boolean = false;\r\n\r\n  installObs = new BehaviorSubject(this.installRequiredSigs)\r\n  removeObs = new BehaviorSubject(this.removeRequiredSigs)\r\n\r\n  installEverFalse:boolean = false;\r\n  checkIfEverNotValid:boolean = false;\r\n  sigNumber:number = 0;\r\n  custSig:number = 0;\r\n  employeeSig: number = 0;\r\n\r\n  checkValues(remove:boolean){\r\n    if(remove) {\r\n      var p = this.dimService.productRemoveDimArray\r\n      var t = this.dimService.travelRemoveDimArray\r\n    } else {\r\n      p = this.dimService.productDimArray\r\n      t = this.dimService.travelDimArray\r\n    }\r\n  \r\n    var pWidth:number = 0;\r\n    var pHeight:number = 0;\r\n    var tWidth:number = 0;\r\n    var tHeight:number = 0;\r\n    var isValid:boolean = true;\r\n   \r\n      \r\n      p.forEach(function(arrayItem) {\r\n        var x = arrayItem.width\r\n        var y = arrayItem.height\r\n        if(!(pWidth > x)) pWidth = x\r\n        if(!(pHeight > y)) pHeight= y\r\n      })\r\n     \r\n\r\n      t.forEach(function(arrayItem) {\r\n        var newValueWidth = arrayItem.width\r\n        var newValueHeight = arrayItem.height\r\n        if(!(tWidth < newValueWidth && tWidth != 0 )) tWidth = newValueWidth\r\n        if(!(tHeight < newValueHeight && tHeight != 0)) tHeight= newValueHeight\r\n      })\r\n \r\n   \r\n   \r\n    if(pWidth >= tWidth || pHeight >= tHeight) {\r\n  \r\n      isValid = false;\r\n    }\r\n \r\n    this.checkifEverFalse(isValid)\r\n    this.checkState(isValid, remove)\r\n    return isValid\r\n  }\r\n\r\n  private checkState(isValid:boolean, remove:boolean){\r\n  \r\n      if(!isValid && !remove ) {\r\n      this.image.needsInstall()\r\n      this.installIncomplete()\r\n      this.needInstallSigs()\r\n    } else \r\n    if (isValid && !remove){\r\n      this.installComplete()\r\n      this.image.needsInstall()\r\n      \r\n    }\r\n    if(!isValid && remove) {\r\n      this.neededRemoval = true;\r\n      this.image.needsRemove()\r\n      this.removeIncomplete();\r\n      this.needRemoveSigs();\r\n    } else\r\n     if (isValid && remove) {\r\n      this.neededRemoval = true;\r\n      this.image.needsRemove()\r\n      this.sigNumber +=1\r\n      this.custSig += 1\r\n    }\r\n  }\r\n  \r\n  private checkifEverFalse(bool:boolean) {\r\n    if(!bool) this.checkIfEverNotValid = true;\r\n  }\r\n\r\n  private needInstallSigs(){\r\n    this.installObs.next(true)\r\n    this.custSig += 2\r\n    this.employeeSig += 1\r\n    this.sigNumber += 3\r\n  }\r\n  private needRemoveSigs(){\r\n    this.removeObs.next(true);\r\n    this.custSig += 2\r\n    this.employeeSig += 1\r\n    this.sigNumber += 3\r\n  }\r\n  \r\n   installComplete(){\r\n    this.testObs.next(true);\r\n    this.installObs.next(false)\r\n   }\r\n   removeComplete(){\r\n     this.testObs2.next(true);\r\n     this.removeObs.next(false);\r\n   }\r\n   installIncomplete(){\r\n     this.testObs.next(false);\r\n     this.installEverFalse = true;\r\n   }\r\n   removeIncomplete(){\r\n     this.testObs2.next(false);\r\n   }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}